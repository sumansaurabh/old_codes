THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face.toLowerCase()][this.weight][this.style]}catch(t){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(t){var e=t.familyName.toLowerCase(),s=this;return s.faces[e]=s.faces[e]||{},s.faces[e][t.cssFontWeight]=s.faces[e][t.cssFontWeight]||{},s.faces[e][t.cssFontWeight][t.cssFontStyle]=t,s.faces[e][t.cssFontWeight][t.cssFontStyle]=t,t},drawText:function(t){var e,s=this.getFace(),i=this.size/s.resolution,a=0,o=String(t).split(""),n=o.length,h=[];for(e=0;e<n;e++){var r=new THREE.Path,l=this.extractGlyphPoints(o[e],s,i,a,r);a+=l.offset,h.push(l.path)}return{paths:h,offset:a/2}},extractGlyphPoints:function(t,e,s,i,a){var o,n,h,r,l,c,f,E,g,p,y,v,T,u,F,d,w,H,R=[],U=THREE.ShapeUtils.b2,m=THREE.ShapeUtils.b3,S=e.glyphs[t]||e.glyphs["?"];if(S){if(S.o)for(l=(r=S._cachedOutline||(S._cachedOutline=S.o.split(" "))).length,c=s,f=s,o=0;o<l;)switch(r[o++]){case"m":E=r[o++]*c+i,g=r[o++]*f,a.moveTo(E,g);break;case"l":E=r[o++]*c+i,g=r[o++]*f,a.lineTo(E,g);break;case"q":if(p=r[o++]*c+i,y=r[o++]*f,u=r[o++]*c+i,F=r[o++]*f,a.quadraticCurveTo(u,F,p,y),H=R[R.length-1])for(v=H.x,T=H.y,n=1,h=this.divisions;n<=h;n++){U(b=n/h,v,u,p),U(b,T,F,y)}break;case"b":if(p=r[o++]*c+i,y=r[o++]*f,u=r[o++]*c+i,F=r[o++]*f,d=r[o++]*c+i,w=r[o++]*f,a.bezierCurveTo(u,F,d,w,p,y),H=R[R.length-1])for(v=H.x,T=H.y,n=1,h=this.divisions;n<=h;n++){var b;m(b=n/h,v,u,d,p),m(b,T,F,w,y)}}return{offset:S.ha*s,path:a}}}},THREE.FontUtils.generateShapes=function(t,e){var s=void 0!==(e=e||{}).size?e.size:100,i=void 0!==e.curveSegments?e.curveSegments:4,a=void 0!==e.font?e.font:"helvetiker",o=void 0!==e.weight?e.weight:"normal",n=void 0!==e.style?e.style:"normal";THREE.FontUtils.size=s,THREE.FontUtils.divisions=i,THREE.FontUtils.face=a,THREE.FontUtils.weight=o,THREE.FontUtils.style=n;for(var h=THREE.FontUtils.drawText(t).paths,r=[],l=0,c=h.length;l<c;l++)Array.prototype.push.apply(r,h[l].toShapes());return r},THREE.typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},"undefined"!=typeof self&&(self._typeface_js=THREE.typeface_js);